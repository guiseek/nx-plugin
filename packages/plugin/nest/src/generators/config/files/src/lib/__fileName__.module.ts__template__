<% if (isGlobal) { %>import { Module, Global } from '@nestjs/common';
<% } else { %>import { Module } from '@nestjs/common';<% } %>

<% if (className === 'Config') { %>import { ConfigModule, ConfigService as NestConfigService } from '@nestjs/config';
<% } else { %>import { ConfigModule, ConfigService } from '@nestjs/config';<% } %>

import { <%= className %>Service } from './<%= fileName %>.service';
import { configuration } from './configuration';

<% if (isGlobal) { %>
@Global()
<% } %>
@Module({
  imports: [
<% if (className === 'Config') { %>    NestConfigModule.forRoot({
<% } else { %>    ConfigModule.forRoot({<% } %>
      load: [
        () => {
          return {
            <%= configConstName %>_CONFIG: configuration('config/<%= configFileName %>.yaml'),
          };
        },
      ],
    }),
  ],
  providers: [
<% if (className === 'Config') { %>    {
      provide: <%= className %>Service,
      useFactory: (service: NestConfigService) => {
        return new <%= className %>Service(service);
      },
      inject: [NestConfigService],
    },<% } else { %>{
      provide: <%= className %>Service,
      useFactory: (service: ConfigService) => {
        return new <%= className %>Service(service);
      },
      inject: [ConfigService],
    },<% } %>
  ],
  exports: [<%= className %>Service]
})
export class <%= className %>Module {}
