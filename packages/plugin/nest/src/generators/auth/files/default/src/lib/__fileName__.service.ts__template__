import { Injectable } from '@nestjs/common';
<% if (jwt) { %>import { JwtService } from '@nestjs/jwt';<% } %>
import { <%= className %>Repository<% if (jwt) { %>, User<% } %> } from './<%= fileName %>.repository';
import { <%= className %>Dto } from './dtos/<%= fileName %>.dto';

@Injectable()
export class <%= className %>Service {
  constructor(
    private <%= propertyName %>Repository: <%= className %>Repository,
    <% if (jwt) { %>private jwtService: JwtService<% } %>
  ) {}

  async validateUser(<%= propertyName %>Dto: <%= className %>Dto): Promise<any> {
    const user = await this.<%= propertyName %>Repository.findOne(<%= propertyName %>Dto.username);
    if (user && user.password === <%= propertyName %>Dto.password) {
      const { password, ...result } = user;
      return result;
    }
    return null;
  }
<% if (jwt) { %>
  async login(user: User) {
    const payload = { username: user.username, sub: user.userId };
    return {
      access_token: this.jwtService.sign(payload),
    };
  }<% } %>
}
